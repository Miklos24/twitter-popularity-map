{"version":3,"sources":["Components/MapChart.js","Components/MapSettings.js","App.js","reportWebVitals.js","index.js"],"names":["MapChart","colorScale","Alabama","Alaska","Arizona","Arkansas","California","Connecticut","projection","geography","geographies","map","geo","console","log","properties","name","fill","stroke","rsmKey","MapSettings","className","Form","Control","type","ToggleButtonGroup","defaultValue","block","ToggleButton","value","variant","App","useState","currentTime","setCurrentTime","useEffect","fetch","then","res","json","data","time","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAuCeA,EAlCE,WAEf,IAAMC,EAAa,CACjBC,QAAS,mBACTC,OAAQ,oBACRC,QAAS,oBACTC,SAAU,mBACVC,WAAY,mBACZC,YAAa,qBAGf,OACE,cAAC,gBAAD,CAAeC,WAAW,eAA1B,SACE,cAAC,cAAD,CAAaC,UAfJ,0DAeT,SACG,qBAAGC,YACUC,KAAI,SAAAC,GAEd,OADAC,QAAQC,IAAIF,EAAIG,WAAWC,MAEzB,cAAC,YAAD,CAEEP,UAAWG,EACXK,KAAML,EAAIG,WAAWC,QAAQf,EACzBA,EAAWW,EAAIG,WAAWC,MAC1B,UACJE,OAAQ,sBALHN,EAAIO,iB,wBCFVC,EAlBK,WAClB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,QAAN,CAAcC,KAAK,cAGvB,qBAAKH,UAAU,aAAf,SACE,eAACI,EAAA,EAAD,CAAmBJ,UAAU,SAASG,KAAK,QAAQR,KAAK,UAAUU,aAAc,EAAGC,OAAK,EAAxF,UACE,cAACC,EAAA,EAAD,CAAcC,MAAO,EAAGC,QAAQ,iBAAhC,mBACA,cAACF,EAAA,EAAD,CAAcC,MAAO,EAAGC,QAAQ,kBAAhC,6BCuBKC,MAhCf,WAAgB,IAAD,EACyBC,mBAAS,GADlC,mBACNC,EADM,KACOC,EADP,KAWb,OARAC,qBAAU,WACRC,MAAM,aACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,EAAeM,EAAKC,YAKxB,sBAAKpB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,yDAEF,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,MAEF,qDACuBY,EADvB,6PCfOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.25e7e00d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst MapChart = () => {\n\n  const colorScale = {\n    Alabama: \"rgb(235, 29, 29)\",\n    Alaska: \"rgb(241, 205, 81)\",\n    Arizona: \"rgb(68, 150, 142)\",\n    Arkansas: \"rgb(170, 24, 65)\",\n    California: \"rgb(45, 214, 41)\",\n    Connecticut: \"rgb(106, 14, 207)\",\n  }\n\n  return (\n    <ComposableMap projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => {\n            console.log(geo.properties.name);\n            return (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill={geo.properties.name in colorScale\n                  ? colorScale[geo.properties.name]\n                  : \"#FFFFFF\"}\n                stroke={\"rgb(186, 186, 186)\"}\n              />\n            );\n          })\n        }\n      </Geographies>\n    </ComposableMap>\n  )\n}\n\nexport default MapChart;\n","import ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport Form from 'react-bootstrap/Form'\n\nconst MapSettings = () => {\n  return (\n    <div className=\"Map-settings\">\n      <div className=\"Map-slider\">\n        <Form>\n          <Form.Control type=\"range\" />\n        </Form>\n      </div>\n      <div className=\"Map-toggle\">\n        <ToggleButtonGroup className=\"d-flex\" type=\"radio\" name=\"options\" defaultValue={1} block>\n          <ToggleButton value={1} variant=\"outline-danger\"> Bad </ToggleButton>\n          <ToggleButton value={2} variant=\"outline-success\"> Good </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default MapSettings;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapChart from './Components/MapChart';\nimport MapSettings from './Components/MapSettings';\n\nfunction App() {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    fetch('/api/time')\n      .then(res => res.json())\n      .then(data => {\n        setCurrentTime(data.time)\n      });\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> Hated in the Nation </h1>\n      </header>\n      <div className=\"App-body\">\n        <MapSettings />\n        <div className=\"Map-container\">\n          <MapChart />\n        </div>\n        <p>\n          The current time is {currentTime}. The prior text was just to test out\n          the API. In this section, I will be providing a description of how this\n          site works (once I finish writing it) and I will probably talk about the\n          Twitter import system and how all this data is organized.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}