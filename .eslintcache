[{"/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/index.js":"1","/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/App.js":"2","/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/reportWebVitals.js":"3","/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/Components/MapChart.js":"4","/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/Components/MapSettings.js":"5"},{"size":500,"mtime":1608876086608,"results":"6","hashOfConfig":"7"},{"size":1001,"mtime":1609823806404,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608589604508,"results":"9","hashOfConfig":"7"},{"size":1522,"mtime":1609384791548,"results":"10","hashOfConfig":"7"},{"size":1541,"mtime":1609384721021,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ybnc1j",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/index.js",[],["24","25"],"/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/App.js",["26"],"/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/reportWebVitals.js",[],"/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/Components/MapChart.js",[],"/Users/miklos/Desktop/Files/Career/Projects/twitter-popularity-map/src/Components/MapSettings.js",["27","28"],"import ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport Form from 'react-bootstrap/Form';\nimport { useState, useEffect } from 'react';\n\nconst MapSettings = (props) => {\n  const [minDate, setMinDate] = useState(new Date(2020, 11, 28))\n\n  const updateFunc = props.updateMap\n  const date = props.date\n  const type = props.type\n\n  return (\n    <div className=\"Map-settings\">\n      <div className=\"Map-slider\">\n        <Form>\n          <Form.Control\n            type=\"range\"\n            min={0}\n            max={1}\n            step={1}\n            value={Math.round((date - minDate) / (24 * 60 * 60 * 1000))}\n            onChange={(e) => {\n              e.preventDefault();\n              updateFunc(new Date(minDate.getTime() + (e.target.value * (24 * 60 * 60 * 1000))), type);\n            }}\n          />\n        </Form>\n        <p>{date.toDateString()}</p>\n      </div>\n      <div className=\"Map-toggle\">\n        <ToggleButtonGroup className=\"d-flex\" type=\"radio\" name=\"options\" defaultValue={type === \"neg\" ? 1 : 2}>\n          <ToggleButton\n            value={1}\n            variant=\"outline-danger\"\n            onClick={() => updateFunc(date, \"neg\")}\n          > Unfavorable Tweets </ToggleButton>\n          <ToggleButton\n            value={2}\n            variant=\"outline-success\"\n            onClick={() => updateFunc(date, \"pos\")}\n          > Favorable Tweets </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default MapSettings;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":27,"nodeType":"35","messageId":"36","endLine":1,"endColumn":36},{"ruleId":"33","severity":1,"message":"34","line":4,"column":20,"nodeType":"35","messageId":"36","endLine":4,"endColumn":29},{"ruleId":"33","severity":1,"message":"37","line":7,"column":19,"nodeType":"35","messageId":"36","endLine":7,"endColumn":29},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setMinDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]